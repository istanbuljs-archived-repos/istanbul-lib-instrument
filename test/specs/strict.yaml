---
name: function expr using strict
guard: isObjectFreezeAvailable
code: |
  (function () {
      "use strict";
      var x = Object.freeze({ foo: 1 });
      try {
          x.foo = 2;
          output = "fail";
      } catch (ex) {
          output = "pass";
      }
  }());
tests:
  - name: covers one statement less
    args: []
    out: pass
    statements: {'0': 1, '1': 1, '2': 1, '3': 1, '4': 0, '5': 1}
    lines: {'1': 1, '3': 1, '4': 1, '5': 1, '6': 0, '8': 1}
    functions: {'0': 1}

---
name: function decl using strict
guard: isObjectFreezeAvailable
code: |
  function foo() {
      "use strict";
      var x = Object.freeze({ foo: 1 });
      try {
          x.foo = 2;
          output = "fail";
      } catch (ex) {
          output = "pass";
      }
  }
  foo();
tests:
  - name: covers one statement less
    args: []
    out: pass
    statements: {'0': 1, '1': 1, '2': 1, '3': 0, '4': 1, '5': 1 }
    lines: { '3': 1, '4': 1, '5': 1, '6': 0, '8': 1, '11': 1}
    functions: {'0': 1}

---
name: function decl that looks like strict but is not
guard: isObjectFreezeAvailable
code: |
  function foo() {
      1;
      "use strict";
      var x = Object.freeze({ foo: 1 });
      try {
          x.foo = 2;
          output = "fail";
      } catch (ex) {
          output = "pass";
      }
  }
  foo();
tests:
  - name: covers all statements as usual
    args: []
    out: fail
    statements: {'0': 1, '1': 1, '2': 1, '3': 1, '4': 1, '5': 1, '6': 0, '7': 1 }
    lines: { '2': 1, '3': 1, '4': 1, '5': 1, '6': 1, '7': 1, '9': 0, '12': 1}
    functions: {'0': 1}

---
name: file-level strict declaration
guard: isObjectFreezeAvailable
code: |
  "use strict";
  var x = Object.freeze({ foo: 1 });
  try {
      x.foo = 2;
      output = "fail";
  } catch (ex) {
      output = "pass";
  }
tests:
  - args: []
    out: fail
    statements: {'0': 1, '1': 1, '2': 1, '3': 1, '4': 0}
    lines: {'2': 1, '3': 1, '4': 1, '5': 1, '7': 0}
